{"version":3,"sources":["lib/timing.js","components/Dashboard/Task/TaskCard.jsx","lib/storage.js","lib/category.js","lib/task.js","components/Dashboard/Task/Tasks.jsx","components/Dashboard/Dashboard.jsx","lib/imageStorage.js","components/Profile/User/avatar-icon.jpg","components/Profile/User/User.jsx","components/Profile/DashboardFilter/DashboardFilter.jsx","components/Profile/AddTaskButton/AddTaskButton.jsx","components/Modal/Form/TaskForm.jsx","components/Modal/AddTaskModal.jsx","components/Profile/Profile.jsx","App.js","index.js"],"names":["APPTimer","instance","func","this","_subscribers","set","delete","forEach","callback","Map","setInterval","notify","TaskCard","props","state","duration","data","getTimerString","option","subscribe","setState","unsubscribe","className","category","style","name","onClick","handleTaskOptions","bind","icon","handleRemoveCard","title","mode","forceSingleModeWidth","max","createdDate","calendar","getDateAgo","humanize","Component","APPStorage","Promise","resolve","reject","item","localStorage","getItem","_prefix","value","setItem","categories","Category","id","map","values","filter","c","parseInt","TaskManager","getTasks","tasks","task","toStorageTask","JSON","get","parse","index","moment","toISOString","dateTime","add","taskId","getById","undefined","a","hasById","storageAll","t","nextId","push","then","Number","del","ret","getLoadedTasks","_observers","f","StorageTask","hours","stringify","num","catch","time","split","clone","isExpired","isActive","TaskDuration","isScheduled","scheduleDuration","activeDuration","getDuration","format","minutes","Tasks","register","updateTasks","tsk","unregister","Dashboard","ImageStorage","file","toBase64","base64","reader","FileReader","readAsDataURL","onload","result","onerror","error","User","username","src","avatar","imageInput","React","createRef","getImage","e","target","current","click","setImage","files","handleImageUpload","backgroundImage","accept","type","ref","onChange","handlePreviewUpdate","html","handleUsername","tagName","DashboardFilter","active","handleTitleClick","AddTaskButton","TaskForm","form","date","save","toTask","onSubmit","setPreview","onReset","handleForm","handlePreview","htmlFor","children","pattern","min","AddTaskModal","preview","createPreview","createInMemoryTask","Profile","modal","handleModal","App","defineLocale","momentLangauge","library","faEllipsisH","faTimes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bdbbb1b.chunk.js","sourcesContent":["class APPTimer {\n\n    static _subscribers = new Map();\n\n    static subscribe(instance, func) {\n        this._subscribers.set(instance, func);\n    }\n\n    static unsubscribe(instance) {\n        this._subscribers.delete(instance);\n    }\n\n    static notify() {\n        APPTimer._subscribers.forEach((callback) => callback());\n    }\n}\n\nsetInterval(APPTimer.notify, 1000);\nexport default APPTimer;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react';\nimport TextFit from 'react-textfit';\nimport APPTimer from '../../../lib/timing';\n\nclass TaskCard extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      duration: props.data.getTimerString(),\n      option: false,\n    };\n  }\n\n  componentDidMount() {\n    APPTimer.subscribe(this, () => {\n      this.setState({ ...this.state, duration: this.props.data.getTimerString()});\n    });\n  }\n\n  componentWillUnmount() {\n    APPTimer.unsubscribe(this);\n  }\n\n  handleTaskOptions() {\n    this.setState({ ...this.state, option: !this.state.option });\n  }\n\n  handleRemoveCard() {\n    this.props.data.delete();\n  }\n\n  render() {\n    return (\n      <li className={`task ${this.props?.data.category.style}`}>\n        <div className=\"task-body\">\n          <header className=\"task-header\">\n            <p className=\"task-category\">{this.props?.data.category.name}</p>\n            <div className=\"task-options\">\n              <FontAwesomeIcon\n                onClick={this.handleTaskOptions.bind(this)}\n                icon={[\"fas\", \"ellipsis-h\"]}\n                className=\"option-icon\"\n              />\n              <ul className={`options-list${this.state.option ? \" active\" : \"\"}`}>\n                <li className=\"task-option\" onClick={this.handleRemoveCard.bind(this)}>Deletar</li>\n              </ul>\n            </div>\n          </header>\n          <section className=\"task-content\">\n            <div className=\"task-title\">{this.props?.data.title}</div>\n            <TextFit\n              className=\"time-remaining\"\n              mode=\"single\"\n              forceSingleModeWidth={true}\n              max={45}>\n              <h2>{this.state.duration}</h2>\n            </TextFit>\n            <div className={`task-state ${this.props?.data.state[0]}`}>{this.props?.data.state[1]}</div>\n          </section>\n          <div className=\"task-footer\">\n            <div className=\"task-createddate\" title={this.props.data.createdDate.calendar()}>\n              {\"há \" + this.props.data.getDateAgo().humanize()}\n            </div>\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default TaskCard;\n","class APPStorage {\n    \n  static _prefix = 'taskapp_';\n  static get(name) {\n    return new Promise((resolve, reject) => {\n      const item = localStorage.getItem(APPStorage._prefix + name);\n      if (!item) {\n        reject(`LocalStorage: ${name} not found`);\n        return;\n      }\n\n      resolve(item);\n    });\n  }\n\n  static set(name, value) {\n    return new Promise((resolve) => {\n      localStorage.setItem(APPStorage._prefix + name, value);\n      resolve(value);\n    });\n  }\n}\n\nexport default APPStorage;\n","const categories = [\n  { name: \"Trabalho\", style: \"work\" },\n  { name: \"Jogos\", style: \"play\" },\n  { name: \"Estudo\", style: \"study\" },\n  { name: \"Lazer\", style: \"selfCare\" },\n];\n\nclass Category {\n\n  constructor(id, name, style) {\n    this.id = id;\n    this.name = name;\n    this.style = style;\n  }\n\n  static values() {\n    return categories.map((value, id) => new Category(id, value.name, value.style));\n  }\n\n  static getById(value) {\n    let category = Category.values().filter((c) => c.id === parseInt(value))[0];\n    if (!category) {\n      category = Category.values()[0];\n    }\n    \n    return category;\n  }\n}\n\nexport default Category;\n","import APPStorage from './storage';\nimport data from '../data/data.json';\nimport moment from 'moment';\nimport Category from './category';\n\nclass TaskManager {\n\n  static _observers = [];\n\n  static async getLoadedTasks() {\n    const tasks = await this.getTasks()\n    return tasks.map((task) => this.toStorageTask(task));\n  }\n\n  static async getTasks() {\n    try {\n      return JSON.parse(await APPStorage.get('tasks'));\n    } catch {\n      return getUpdatedJson();\n    }\n  }\n\n  static async getById(taskId) {\n    const tasks = await this.getTasks();\n    return tasks.filter((task) => task.id === taskId)[0];\n  }\n\n  static async hasById(taskId) {\n    return await this.getById(taskId) !== undefined;\n  }\n\n  static async save(task) {\n    return new Promise(async (resolve) => {\n      let tasks = await this.getTasks();\n      if (await this.hasById(task.id)) {\n        this.storageAll(tasks.map((t) => (t.id === task.id) ? task : t));\n        resolve(task);\n      } else {\n        task.id = await this.nextId();\n        tasks.push(task);\n        this.storageAll(tasks);\n        resolve(tasks);\n      }\n    }).then((tasks) => this.notify(tasks));\n  }\n\n  static async delete(task) {\n    return this.getTasks().then(async (tasks) => {\n      let id = (task instanceof Number) ? task : task.id;\n      if (await this.hasById(id)) {\n        this.storageAll(tasks.filter((task) => task.id !== id));\n        return true;\n      }\n      return false;\n    }).then((del) => this.notify(del));\n  }\n\n  static notify(ret) {\n    TaskManager.getLoadedTasks()\n      .then((tasks) => TaskManager._observers.forEach((func) => {\n        func(tasks);\n      }));\n    return ret;\n  }\n\n  static async register(func) {\n    this._observers.push(func);\n  }\n\n  static async unregister(func) {\n    return this._observers = this._observers.filter((f) => f === func);\n  }\n\n  static toStorageTask(task) {\n    return new StorageTask(task);\n  }\n\n  static createInMemoryTask(title, category, dateTime, hours) {\n    return TaskManager.toStorageTask({\n      title: title,\n      category: category,\n      createdDate: moment().toISOString(),\n      dateTime: moment().add(3, \"hours\").toISOString(),\n      hours: hours,\n    });\n  }\n\n  static createPreview() {\n    return TaskManager.toStorageTask({\n      title: \"Preview\",\n      category: 0,\n      createdDate: moment().toISOString(),\n      dateTime: moment().add(3, \"hours\").toISOString(),\n      hours: \"01:00\",\n    });\n  }\n\n  static async storageAll(tasks) {\n    return APPStorage.set('tasks', JSON.stringify(tasks));\n  }\n\n  static async nextId() {\n      return await APPStorage.get('nextId')\n        .then((num) => APPStorage.set('nextId', parseInt(num) + 1))\n        .catch(() => APPStorage.set('nextId', 4));\n  }\n}\n\nclass StorageTask {\n  \n  constructor({ id, title, category, createdDate, dateTime, hours }) {\n    this.id = id;\n    this.title = title;\n    this.category = Category.getById(category);\n    this.createdDate = moment(createdDate);\n    this.dateTime = moment(dateTime);\n    this.time = hours.split(':');\n    this.hours = this.dateTime.clone().add(this.time[0], \"h\").add(this.time[1], \"m\");\n    this.duration = null;\n  }\n\n  get state() {\n    if (this.isExpired()) {\n      return ['complete', 'Finalizado'];\n    }\n    if (this.isActive()) {\n      return ['active', 'Ativo'];\n    }\n    return ['scheduled', 'Agendado'];\n  }\n\n  isScheduled() {\n    return this.dateTime - moment() > 0;\n  }\n\n  isActive() {\n    return this.dateTime - moment() <= 0 && !this.isExpired();\n  }\n\n  isExpired() {\n    return this.hours - moment() <= 0;\n  }\n\n  getDateAgo(){\n    return moment.duration(this.createdDate - moment(), 'milliseconds');\n  }\n\n  getDuration() {\n    if (!this.duration) {\n      this.duration = new TaskDuration(this);\n    }\n    return this.isScheduled()\n      ? this.duration.scheduleDuration()\n      : this.isActive()\n      ? this.duration.activeDuration()\n      : null;\n  }\n\n  getTimerString() {\n      if (this.getDuration() == null){\n          return this.hours.format('DD/MM - HH:mm')\n      }\n      let duration = this.getDuration();\n      if(duration.hours() !== 0) {\n        return `${duration.hours()}h${duration.minutes()}m`\n      }\n      \n      return `${duration.minutes()}m`\n  }\n\n  delete() {\n    TaskManager.delete(this);\n  }\n\n  toTask() {\n    return {\n      id: this.id,\n      title: this.title,\n      category: this.category.id,\n      createdDate: this.createdDate.toISOString(),\n      dateTime: this.dateTime.toISOString(),\n      hours: `${this.time[0]}:${this.time[1]}`\n    }\n  }\n\n  getFixedTime() {\n    if (!this.time[0] || !this.time[1]){\n      return '01:00';\n    }\n    return `${this.time[0]}:${this.time[1]}`;\n  }\n}\n\nclass TaskDuration {\n  constructor({ dateTime, hours }) {\n    this.scheduleDuration = () => moment.duration(\n      dateTime - moment(),\n      \"milliseconds\"\n    );\n    this.activeDuration = () => moment.duration(hours - moment(), \"milliseconds\");\n  }\n}\n\nfunction getUpdatedJson() {\n    return data.map((value, index) => {\n      value.createdDate = moment().toISOString();\n      value.dateTime = moment().add((index + 1) + 2, 'hours').toISOString();\n      return value;\n    });\n}\n\nexport default TaskManager;\n","import React, { Component } from 'react';\nimport TaskCard from './TaskCard';\nimport TaskManager from '../../../lib/task';\n\nimport './Task.css';\n\nexport const TaskContext = React.createContext();\n\nclass Tasks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: []\n    }\n  }\n\n  componentDidMount() {\n    TaskManager.register(this.updateTasks.bind(this)).then(() => {\n      TaskManager.getLoadedTasks().then((tsk) => {\n        this.setState({ tasks: tsk });\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    TaskManager.unregister(this.updateTasks.bind(this));\n  }\n\n  updateTasks(tasks) {\n    this.setState({ ...this.state, tasks: tasks });\n  }\n\n  render() {\n    return (\n      <ul className=\"tasks\">\n        {this.state.tasks.map(((task) => <TaskCard data={task} key={task.id} />))}\n      </ul>\n    );\n  }\n}\n\nexport default Tasks;\n","import React, { Component } from 'react';\nimport Tasks from './Task/Tasks';\nimport './Dashboard.css';\n\nclass Dashboard extends Component {\n  render() {\n    return (\n      <section className='dashboard'>\n        <div className='taskboard'>\n          <Tasks />\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Dashboard;\n","import APPStorage from './storage';\n\nclass ImageStorage {\n  static async getImage(name) {\n    return APPStorage.get(name);\n  }\n\n  static async setImage(name, file) {\n    const base64 = await toBase64(file);\n    APPStorage.set(name, base64);\n    return base64;\n  }\n}\n\nfunction toBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = (error) => reject(error);\n  });\n}\n\nexport default ImageStorage;\n","export default __webpack_public_path__ + \"static/media/avatar-icon.e5117e8e.jpg\";","import React, { Component } from 'react';\nimport TextFit from 'react-textfit';\nimport ContentEditable from 'react-contenteditable';\nimport ImageStorage from '../../../lib/imageStorage';\nimport APPStorage from '../../../lib/storage';\n\nimport avatar from './avatar-icon.jpg';\nimport './User.css';\n\n\nclass User extends Component {\n\n  imageInput;\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      username: 'username',\n      src: avatar,\n    };\n    \n    this.imageInput = React.createRef();\n  }\n\n  componentDidMount() {\n    ImageStorage.getImage(\"avatar\")\n        .then((value) => this.setState({ ...this.state, src: value }));\n    APPStorage.get('username')\n        .then((value) => this.setState({...this.state, username: value}));\n  }\n\n  handleUsername(e) {\n    APPStorage.set('username', e.target.value)\n        .then((value) => this.setState({ ...this.state, username: e.target.value }));\n  }\n\n  handleImageUpload() {\n    let input = this.imageInput?.current;\n    input.click();\n  }\n\n  handlePreviewUpdate(e) {\n    ImageStorage.setImage(\"avatar\", e.target.files[0])\n        .then((base64) => this.setState({...this.state, src: base64 }));\n  }\n\n  render() {\n    return (\n      <div className=\"user\">\n        <div\n          className=\"user-image\"\n          onClick={this.handleImageUpload.bind(this)}\n          style={{ backgroundImage: `url(${this.state.src})` }}\n        >\n          <input\n            accept=\".png, .jpg, .gif\"\n            className=\"image-upload\"\n            type=\"file\"\n            ref={this.imageInput}\n            onChange={this.handlePreviewUpdate.bind(this)}\n          />\n        </div>\n        <div className=\"user-text\">\n          <p>Bem vindo,</p>\n          <TextFit\n            className=\"username\"\n            mode=\"single\"\n            forceSingleModeWidth={true}\n            max={55}>\n            <ContentEditable\n              html={this.state.username}\n              onChange={this.handleUsername.bind(this)}\n              tagName=\"h2\"/>\n          </TextFit>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default User;\n","import React, { Component } from 'react';\nimport Category from '../../../lib/category';\nimport './DashboardFilter.css';\n\nclass DashboardFilter extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            active: true\n        }\n    }\n\n    handleTitleClick() {\n        this.setState({ active: !(this.state.active) });\n    }\n\n    render() {\n        return (\n        <div className=\"dashboard-filter\">\n            <div className=\"filter-title\" onClick={this.handleTitleClick.bind(this)}>Filtrar</div>\n            {this.state?.active &&\n            <ul className=\"filter-list\">\n                {\n                Category.values().map((category, index) => {\n                    return <li className=\"filter-item\" key={index}>{category.name}</li>\n                })\n                }\n            </ul>\n            }\n        </div>);\n    }\n}\n \nexport default DashboardFilter;","import React, { Component } from 'react';\n\nclass AddTaskButton extends Component {\n    render() { \n        return (\n        <div className=\"task-add\" onClick={this.props?.onClick}>\n            <p>Adicionar Tarefa</p>\n        </div>\n        );\n    }\n}\n \nexport default AddTaskButton;","import moment from 'moment';\nimport React, { Component } from 'react';\nimport Category from '../../../lib/category';\nimport TaskManager from '../../../lib/task';\n\nclass TaskForm extends Component {\n  \n  handleForm(e) {\n    const form = e.target;\n    let name = form[0].value;\n    let category = form[1].value;\n    let date = form[2].value;\n    let hours = form[3].value;\n    if (!date) {\n      date = moment().add(3, \"hours\");\n    } else {\n      date = moment(date);\n    }\n\n    TaskManager.save(\n      TaskManager.toStorageTask({\n        title: name,\n        category: category,\n        createdDate: moment().toISOString(),\n        dateTime: moment(date).toISOString(),\n        hours: hours,\n      }).toTask()\n    );\n\n    this.props.onSubmit();\n  }\n\n  handlePreview(e) {\n    let form = e.target.form;\n    let name = form[0].value;\n    let category = form[1].value;\n    let date = form[2].value;\n    let hours = form[3].value;\n\n    date = (!date) ? moment().add(3, \"hours\") : moment(date);\n    this.props.setPreview(name, category, date, hours);\n  }\n\n  render() {\n    return (\n      <form\n        className=\"task-form\"\n        onReset={this.handleForm.bind(this)}\n        onChange={this.handlePreview.bind(this)}\n      >\n        <div className=\"form-title\">\n          <label htmlFor=\"title\" children=\"Titulo\" />\n          <input name=\"title\" id=\"title\" />\n        </div>\n        <div className=\"form-category\">\n          <label htmlFor=\"category\" children=\"Categoria\" />\n          <select name=\"category\" id=\"category\">\n            {Category.values().map((c, index) => {\n              return (\n                <option value={index} key={index}>\n                  {c.name}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <div className=\"form-startdate\">\n          <label htmlFor=\"startdate\" children=\"Inicio\" />\n          <input\n            name=\"startdate\"\n            id=\"startdate\"\n            type=\"datetime-local\"\n            pattern={\"YYYY-MM-DDThh:mm\"}\n            min={moment().format(\"YYYY-MM-DDThh:mm\")}\n            max={moment().add(7, \"days\").format(\"YYYY-MM-DDThh:mm\")}\n          />\n        </div>\n        <div className=\"form-endtime\">\n          <label htmlFor=\"endtime\" children={\"Duração\"} />\n          <input name=\"endtime\" id=\"endtime\" type=\"time\" />\n        </div>\n        <button className=\"submit-button\" type=\"reset\">\n          Adicionar\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default TaskForm;\n","import React, { Component } from 'react';\n\nimport TaskCard from '../Dashboard/Task/TaskCard';\nimport TaskForm from './Form/TaskForm';\nimport TaskManager from '../../lib/task';\n\nimport './TaskModal.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass AddTaskModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      preview: TaskManager.createPreview()\n    };\n  }\n\n  setPreview(title, category, dateTime, hours) {\n    let preview = TaskManager.createInMemoryTask(title, category, dateTime, hours);\n    this.setState({ preview: preview });\n  }\n\n  render() {\n    return (\n      <section className=\"modal taskmodal\">\n        <div className=\"taskmodal-body\">\n          <div className=\"modal-close\" onClick={this.props.onClick}>\n            <FontAwesomeIcon icon={['fas', 'times']}/>\n          </div>\n          <div className=\"taskmodal-form\">\n            <TaskForm setPreview={this.setPreview.bind(this)} onSubmit={this.props.onClick}/>\n          </div>\n          <div className=\"taskmodal-preview\">\n            <TaskCard data={this.state.preview} />\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n \nexport default AddTaskModal;","import React, { Component } from 'react';\nimport User from './User/User';\nimport DashboardFilter from './DashboardFilter/DashboardFilter';\nimport AddTaskButton from './AddTaskButton/AddTaskButton';\nimport AddTaskModal from '../Modal/AddTaskModal';\n\nimport \"./Profile.css\";\n\nclass Profile extends Component {\n\n  constructor() {\n    super();\n    this.state = { modal: false }\n  }\n\n  handleModal() {\n    this.setState({ modal: !this.state.modal });\n  }\n\n  render() {\n    return (\n      <section className=\"user-profile\">\n        <div className=\"profile\">\n          <User/>\n          <div className=\"profile-buttons\">\n            <DashboardFilter/>\n          </div>\n          <AddTaskButton onClick={this.handleModal.bind(this)}/>\n          {(this.state.modal) && <AddTaskModal onClick={this.handleModal.bind(this)}/>}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\n\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Profile from './components/Profile/Profile';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <div className='app-body'>\n          <Profile />\n          <Dashboard />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport moment from 'moment';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faEllipsisH, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport momentLangauge from'./data/moment_pt-br.json';\n\nimport App from './App';\nimport './index.css';\n\nconst momentjs = moment;\n\nmomentjs.defineLocale('pt-br', momentLangauge);\nlibrary.add(faEllipsisH, faTimes);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}